volumes:
  db-data:
  nm-app:
  storage-data:

services:
  app:
    build:
      dockerfile: Dockerfile
      context: .
      args:
        BUILD_ENV: $(BUILD_ENV)
    command: ['npm', 'run', 'dev']
    stdin_open: true
    tty: true
    volumes:
      - .:/app
      - nm-app:/app/node_modules
    ports:
      - '3000:3000'
    depends_on:
      db:
        condition: service_healthy
      storage:
        condition: service_healthy
      uaa:
        condition: service_started
    environment:
      BUILD_ENV: $(BUILD_ENV)
      DATABASE_URI: postgresql://postgres:password@db:5432/pages_editor
      PAYLOAD_SECRET: mysecret
      NEXT_PUBLIC_SERVER_URL: http://localhost:3000
      PREVIEW_URL: http://localhost:5000
      OAUTH_CLIENT_ID: pages-client
      OAUTH_CLIENT_SECRET: client-secret
      OAUTH_AUTH_ENDPOINT: http://localhost:9001/oauth/authorize
      OAUTH_TOKEN_ENDPOINT: http://uaa:8080/oauth/token
      OAUTH_USERINFO_ENDPOINT: http://uaa:8080/userinfo
      LOGOUT_ENDPOINT: http://uaa:8080/logout.do
      PUBLIC_URL: http://localhost:3000
      PROMPT_URL: http://localhost:5000/reload
      TEST_DATABASE_URI: postgresql://postgres:password@db:5432/pages_editor_test
      STORAGE_ENDPOINT_URL: http://storage:9000
      STORAGE_FORCE_PATH_STYLE: true
      SITE_METADATA_BUCKET: pages-editor-bucket
      AWS_ACCESS_KEY_ID: pages-editor-access-key
      AWS_SECRET_ACCESS_KEY: pages-editor-secret-key
      AWS_REGION: us-gov-west-1
      BUCKET_MANAGER_AWS_ACCESS_KEY_ID: pages-editor-access-key
      BUCKET_MANAGER_AWS_SECRET_ACCESS_KEY: pages-editor-secret-key
  db:
    build:
      dockerfile: Dockerfile-db
      context: ./docker
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - '5433:5432'
    environment:
      POSTGRES_DB: pages_editor
      POSTGRES_TEST_DB: pages_editor_test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    user: postgres
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready', '-h', 'db', '-d', 'pages_editor']
      interval: 10s
      timeout: 5s
      retries: 5

  storage:
    image: minio/minio
    ports:
      - '9100:9000'
      - '9101:9001'
    healthcheck:
      test: ['CMD', 'curl', '-I', http://storage:9000/minio/health/live]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    command: 'server --console-address=":9001" /data'
    environment:
      MINIO_ROOT_USER: pages-editor-access-key
      MINIO_ROOT_PASSWORD: pages-editor-secret-key
      MINIO_ENDPOINT_URL: http://storage:9000
    volumes:
      - storage-data:/data
      - .:/app

  storage-bootstrap:
    image: minio/mc
    depends_on:
      storage:
        condition: service_healthy
    restart: 'no'
    environment:
      MINIO_ROOT_USER: pages-editor-access-key
      MINIO_ROOT_PASSWORD: pages-editor-secret-key
      MINIO_ENDPOINT_URL: http://storage:9000
      BUCKET_NAME: pages-editor-bucket
      SITES_SERVICE_NAMES: pages-editor-bucket,pages-site1-bucket,pages-site2-bucket
    entrypoint: /app/docker/minio-bootstrap.sh
    volumes:
      - .:/app

  uaa:
    build:
      dockerfile: Dockerfile-uaa
      context: ./docker
    ports:
      - 9001:8080
    command: ['/tomcat/bin/catalina.sh', 'run']
